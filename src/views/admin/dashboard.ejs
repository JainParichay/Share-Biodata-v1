<%- include('../partials/header') %>

<div class="flex h-screen bg-gray-100">
  <!-- Sidebar is critical, load immediately -->
  <%- include('../components/admin/Sidebar') %>

  <div class="flex-1 flex flex-col overflow-hidden">
    <!-- Main Content -->
    <main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-200">
      <div class="container mx-auto px-6 py-8">
        <!-- Stats Cards Row -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <%- include('../components/LazyLoader', { component:
          'admin/StatsCard', props: { title: 'Total Share Links', icon: 'link' }
          }) %> <%- include('../components/LazyLoader', { component:
          'admin/StatsCard', props: { title: 'Total PDF Opened', icon: 'file-pdf'
          } }) %> <%- include('../components/LazyLoader', { component:
          'admin/StatsCard', props: { title: 'Active Links', icon:
          'check-circle' } }) %> <%- include('../components/LazyLoader', {
          component: 'admin/StatsCard', props: { title: 'Users Sessions', icon:
          'check-circle' } }) %>
        </div>

        <!-- Share Links Stats Table -->
        <div class="bg-white rounded-lg shadow mb-8">
          <%- include('../components/LazyLoader', { component:
          'admin/ShareStats', props: {} }) %>
        </div>

        <!-- Recent Activity -->
        <div class="bg-white rounded-lg shadow mb-8">
          <%- include('../components/LazyLoader', { component:
          'admin/RecentActivity', props: {} }) %>
        </div>

        <!-- Quick Actions and Notifications -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <%- include('../components/LazyLoader', { component:
          'admin/QuickActions', props: {} }) %> <%-
          include('../components/LazyLoader', { component:
          'admin/Notifications', props: {} }) %>
        </div>
      </div>
    </main>
  </div>
</div>

<!-- Add this before closing body tag -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const componentToken = "<%= componentToken %>";

    const loadComponent = async (element) => {
      const component = element.dataset.component;
      const props = JSON.parse(
        decodeURIComponent(element.dataset.props || "{}")
      );

      try {
        const response = await fetch(`/api/components/${component}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-Component-Token": componentToken,
          },
          body: JSON.stringify(props),
          credentials: "include",
        });

        if (response.ok) {
          const html = await response.text();
          element.innerHTML = html;
        } else if (response.status === 401) {
          window.location.href = "/auth/login";
        } else {
          throw new Error(`Failed to load component: ${response.status}`);
        }
      } catch (error) {
        console.error("Error loading component:", error);
        element.innerHTML =
          '<div class="text-red-500 p-4">Failed to load component</div>';
      }
    };

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            loadComponent(entry.target);
            observer.unobserve(entry.target);
          }
        });
      },
      { rootMargin: "50px" }
    );

    document.querySelectorAll(".lazy-component").forEach((component) => {
      observer.observe(component);
    });
  });
</script>

<%- include('../partials/footer') %>
